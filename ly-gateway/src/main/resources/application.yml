server:
  port: 10010
eureka:
  client:
    service-url:
      defaultZone: http://ly-registry:10086/eureka
hystrix:
  command:
    default:
      execution.isolation.thread.timeoutInMilliseconds: 6000 # 熔断超时时长：6000ms
ribbon:
  ConnectTimeout: 500 # ribbon链接超时时长
  ReadTimeout: 2000 # ribbon读取超时时长
spring:
  application:
    name: ly-gateway
  cloud:
    gateway:
      default-filters: # 默认过滤项
        - StripPrefix=1 # 去除路由前缀
        - name: Hystrix # 指定过滤工厂名称（可以是任意过滤工厂类型）
          args: # 指定过滤的参数
            name: fallbackcmd  # hystrix的指令名
            fallbackUri: forward:/hystrix/fallback # 失败后的跳转路径
      globalcors: # 全局的跨域处理
        add-to-simple-url-handler-mapping: true # 是否将当前cors配置加入到SimpleUrlHandlerMapping中，解决options请求被拦截问题
        corsConfigurations:
          '[/**]':
            allowedOrigins: # 允许哪些网站的跨域请求
            - "http://manage.leyou.com"
            - "http://www.leyou.com"
            allowedMethods: # 允许的跨域ajax的请求方式
            - "GET"
            - "POST"
            - "DELETE"
            - "PUT"
            - "OPTIONS"
            allowedHeaders: "*" # 允许在请求中携带的头信息
            allowCredentials: true # 是否允许携带cookie
            maxAge: 360000 # 这次跨域检测的有效期
      routes:
      - id: auth-service # 授权服务
        uri: lb://auth-service
        predicates:
          - Path=/auth/**
      - id: search-service # 授权服务
        uri: lb://search-service
        predicates:
          - Path=/search/**
      - id: user-service # 授权服务
        uri: lb://user-service
        predicates:
          - Path=/user/**
      - id: trade-service # 交易服务
        uri: lb://trade-service
        predicates:
          - Path=/trade/**
      - id: item-service # 商品微服务
        uri: lb://item-service
        predicates:
          - Path=/item/**
  redis:
    host: myredis

logging:
  level:
    com.leyou: debug
# 要想让auth-api中的功能全都生效，auth-api中
# 配置了自动装配功能，但是由于AuthConfiguration和
ly:
  auth:
    clientId: api-gateway
    secret: 1234
# MvcConfig都加了conditionalOn，所以此处要加以配置
# 其他配置不需要，因为网关基于webflux编程，和SpringMVC无关